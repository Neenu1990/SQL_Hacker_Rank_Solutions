PROBLEM 1: Weather Observation Station 15
Query the Western Longitude (LONG_W) for the largest Northern Latitude (LAT_N) in STATION that is less than 137.2345.
Round your answer to 4 decimal places.

SOLUTION:
SELECT ROUND(LONG_W,4) FROM STATION
WHERE LAT_N =(SELECT MAX(LAT_N) FROM STATION WHERE LAT_N<137.2345);

PROBLEM 2: Weather Observation Station 16
Query the smallest Northern Latitude (LAT_N) from STATION that is greater than 38.7780. Round your answer to  4 decimal places.

SOLUTION :
SELECT ROUND(MIN(LAT_N),4) FROM STATION
WHERE LAT_N>38.7780;


PROBLEM 3: Weather Observation Station 17
Query the Western Longitude (LONG_W)where the smallest Northern Latitude (LAT_N) in STATION is greater than  38.7780. 
Round your answer to 4 decimal places.

SOLUTION :
SELECT ROUND(LONG_W,4) FROM STATION
WHERE LAT_N = (SELECT MIN(LAT_N) FROM STATION WHERE LAT_N >38.7780);

PROBLEM 4: Weather Observation Station 18

Consider P1(a,b) and P2(c,d) to be two points on a 2D plane.

 a happens to equal the minimum value in Northern Latitude (LAT_N in STATION).
 b happens to equal the minimum value in Western Longitude (LONG_W in STATION).
 c happens to equal the maximum value in Northern Latitude (LAT_N in STATION).
 d happens to equal the maximum value in Western Longitude (LONG_W in STATION).
Query the Manhattan Distance between points P1  and P2 and round it to a scale of 4 decimal places.

SOLUTION:
SELECT ROUND(ABS(MIN(LAT_N) - MAX(LAT_N)) + ABS(MIN(LONG_W) - MAX(LONG_W)),4)
FROM STATION;

PROBLEM 5:Revising Aggregations - The Count Function
Query a count of the number of cities in CITY having a Population larger than 100,000.

SOLUTION:
SELECT COUNT(NAME) FROM CITY
WHERE POPULATION>100000;

PROBLEM 6: Revising Aggregations - The Sum Function
Query the total population of all cities in CITY where District is California.

SOLUTION:
SELECT SUM(POPULATION) FROM CITY
WHERE DISTRICT='California';

PROBLEM 7: Revising Aggregations - Averages
Query the average population of all cities in CITY where District is California.

SOLUTION:
SELECT AVG(POPULATION) FROM CITY
WHERE DISTRICT='California';

PROBLEM 8: Average Population
Query the average population for all cities in CITY, rounded down to the nearest integer.

SOLUTION:
SELECT ROUND(AVG(POPULATION)) FROM CITY;

PROBLEM 9:Japan Population
Query the sum of the populations for all Japanese cities in CITY. The COUNTRYCODE for Japan is JPN.

SOLUTION:
SELECT SUM(POPULATION)FROM CITY
WHERE COUNTRYCODE='JPN';

PROBLEM 10: Population Density Difference
Query the difference between the maximum and minimum populations in CITY.

SOLUTION:
SELECT MAX(POPULATION)-MIN(POPULATION) FROM CITY;

PROBLEM 11: The Blunder
Samantha was tasked with calculating the average monthly salaries for all employees in the EMPLOYEES table, but did not realize her keyboard's  0 key was broken until after completing the calculation. 
She wants your help finding the difference between her miscalculation (using salaries with any zeros removed), and the actual average salary.
Write a query calculating the amount of error (i.e.: actual-miscalculated average monthly salaries), and round it up to the next integer.

SOLUTION:
SELECT CEIL(AVG(Salary)-AVG(REPLACE(Salary,'0','')))
FROM  EMPLOYEES;

CEIL() : The CEIL() function returns the smallest integer value that is bigger than or equal to a number.

Note: This function is equal to the CEILING() function.

REPLACE(): The REPLACE() function replaces all occurrences of a substring within a string, with a new substring.

Note: This function performs a case-sensitive replacement.

Syntax
REPLACE(string, from_string, new_string)

PROBLEM 12: Top Earners
We define an employee's total earnings to be their monthly salary*months worked, and the maximum total earnings to be the maximum total earnings for any employee in the Employee table. Write a query to find the maximum total earnings for all employees as well as the total number of employees who have maximum total earnings. 
Then print these values as 2 space-separated integers.

SOLUTION:
SELECT (months*salary) as Total_earnings,COUNT(*) FROM Employee
GROUP BY Total_earnings
ORDER BY Total_earnings DESC LIMIT 1;

PROBLEM 13: Weather Observation Station 2
Query the following two values from the STATION table:

1. The sum of all values in LAT_N rounded to a scale of 2 decimal places.
2. The sum of all values in LONG_W rounded to a scale of 2 decimal places.

SOLUTION:
SELECT ROUND(SUM(LAT_N),2),ROUND(SUM(LONG_W),2) FROM STATION;

PROBLEM 14: Weather Observation Station 13
Query the sum of Northern Latitudes (LAT_N) from STATION having values greater than 38.7880 and less than 137.2345. 
Truncate your answer to 4 decimal places.

SOLUTION:
SELECT ROUND(SUM(LAT_N),4) FROM STATION
WHERE LAT_N BETWEEN 38.7880 AND 137.2345;

PROBLEM 15: Weather Observation Station 14
Query the greatest value of the Northern Latitudes (LAT_N) from STATION that is less than 137.2345. Truncate your answer to 4 decimal places.

SOLUTION:
SELECT ROUND(LAT_N,4) FROM STATION
WHERE LAT_N<137.2345
ORDER BY LAT_N DESC LIMIT 1;


PROBLEM 16: Weather Observation Station 19
Consider P1(a,c) and P2(b,d) to be two points on a 2D plane where (a,b) are the respective minimum and maximum values of Northern Latitude (LAT_N) and (c,d) are the respective minimum and maximum values of Western Longitude (LONG_W) in STATION.
Query the Euclidean Distance between points P1 and P2 and format your answer to display 4  decimal digits.

SOLUTION:
SELECT ROUND(SQRT(POWER(MAX(LAT_N)-MIN(LAT_N),2)+POWER(MAX(LONG_W)-MIN(LONG_W),2)),4)
FROM STATION;

PROBLEM 17: Weather Observation Station 20
A median is defined as a number separating the higher half of a data set from the lower half. Query the median of the Northern Latitudes (LAT_N) from STATION and round your answer to 4 decimal places.

SOLUTION:

SET @rowIndex := -1;
SELECT ROUND(AVG(t.LAT_N),4) FROM
(SELECT @rowIndex:= @rowIndex+1 AS rowIndex, s.LAT_N from STATION AS s ORDER BY s.LAT_N) AS t
where t.rowIndex in (floor(@rowIndex/2), ceil(@rowIndex/2));

EXPLANATION:
Firstly, set a variable rowIndex := -1, because the index starts at 0. Then the medianâ€™s index would be in floor(rowIndex/2) and ceil(rowIndex/2).







